<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:broker="http://activemq.apache.org/schema/core"
  xmlns:camel="http://camel.apache.org/schema/spring"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation=" http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd          http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd          http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd">
  <bean class="biz.majorov.camel.CustomerServiceBean"
    id="customerServiceBean" init-method="generateCustomers" />
  <camelContext id="nm-context" trace="false"
    xmlns="http://camel.apache.org/schema/spring">
    <route id="customers-service" streamCache="true">
      <from id="_from1" uri="direct:in" />
      <bean id="bean1" method="getCustomers" ref="customerServiceBean" />
      <split id="split1">
        <simple>body</simple>
        <log id="log1" message="splitted message: ${body}" />
        <to id="Persist entity"
          uri="sql:INSERT INTO CUSTOMERS(DATA) VALUES (#)" />
      </split>
      <log id="_log1" message="insert done" />
      <to id="_to1" uri="direct:select" />
    </route>
    <route id="select-customer">
      <from id="_from2" uri="direct:select" />
      <to id="_to2" uri="sql:select * from CUSTOMERS ORDER BY ID" />
      <to id="_to3" uri="log:result" />
    </route>
     <route id="start" startupOrder="1">
      <from id="_from3"
        uri="quartz2://myGroup/myTimerName?cron=0/2+*+*+*+*+?" />
      <to id="_to4" uri="direct:in" />
    </route>
  </camelContext>
  <bean class="com.mchange.v2.c3p0.ComboPooledDataSource"
    destroy-method="close" id="nm-ds">
    <property name="driverClass" value="${db.driver}" />
    <property name="JdbcUrl" value="${db.url}" />
    <property name="user" value="${db.username}" />
    <property name="password" value="${db.password}" />
    <property name="maxPoolSize" value="3" />
    <property name="maxStatementsPerConnection" value="3" />
  </bean>
  <bean
    class="org.apache.camel.spring.spi.BridgePropertyPlaceholderConfigurer"
    id="bridgePropertyPlaceholder">
    <property name="locations">
      <list>
        <value>classpath:application.properties</value>
      </list>
    </property>
    <property name="ignoreUnresolvablePlaceholders" value="true" />
  </bean>
  <bean
    class="org.springframework.jdbc.datasource.init.DataSourceInitializer"
    id="dataSourceInitializer">
    <property name="databasePopulator" ref="resourceDatabasePopulator" />
    <property name="dataSource" ref="nm-ds" />
  </bean>
  <bean class="org.apache.camel.component.sql.SqlComponent"
    depends-on="dataSourceInitializer" id="sql">
    <property name="dataSource" ref="nm-ds" />
  </bean>
  <bean
    class="org.springframework.jdbc.datasource.init.ResourceDatabasePopulator"
    id="resourceDatabasePopulator">
    <property name="scripts">
      <array>
        <value>classpath*:init.sql</value>
      </array>
    </property>
  </bean>
</beans>
